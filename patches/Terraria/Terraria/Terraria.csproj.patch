--- src/decompiled/Terraria/Terraria.csproj
+++ src/Terraria/Terraria/Terraria.csproj
@@ -1,47 +_,98 @@
 <Project Sdk="Microsoft.NET.Sdk">
   <Import Project="../Configuration.targets" />
+  <Import Project="../../WorkspaceInfo.targets" />
   <PropertyGroup>
     <OutputType>WinExe</OutputType>
     <Version>1.4.2.3</Version>
     <Company>Re-Logic</Company>
     <Copyright>Copyright Â© 2021 Re-Logic</Copyright>
     <RootNamespace>Terraria</RootNamespace>
+    <AssemblyName>Terraria</AssemblyName>
   </PropertyGroup>
   <PropertyGroup Condition="$(Configuration.Contains('Server'))">
     <OutputType>Exe</OutputType>
+    <AssemblyName>$(AssemblyName)Server</AssemblyName>
+  </PropertyGroup>
+  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
+    <AssemblyName>$(AssemblyName)Debug</AssemblyName>
+  </PropertyGroup>
+  <PropertyGroup>
-    <OutputName>$(OutputName)Server</OutputName>
+    <OutputName>$(AssemblyName)</OutputName>
+    <ApplicationIcon>Icon.ico</ApplicationIcon>
   </PropertyGroup>
   <ItemGroup>
     <Reference Include="CsvHelper" />
     <Reference Include="Ionic.Zip.CF" />
-    <Reference Include="Microsoft.Xna.Framework" />
-    <Reference Include="Microsoft.Xna.Framework.Game" />
-    <Reference Include="Microsoft.Xna.Framework.Graphics" />
-    <Reference Include="Microsoft.Xna.Framework.Xact" />
+    <ProjectReference Include="../../../FNA/FNA.csproj" />
     <Reference Include="MP3Sharp" />
     <Reference Include="Newtonsoft.Json" />
     <Reference Include="NVorbis" />
     <Reference Include="RailSDK.Net" />
     <ProjectReference Include="../ReLogic/ReLogic.csproj" />
-    <EmbeddedResource Include="../ReLogic/bin/$(Configuration)/$(TargetFramework)/ReLogic.dll">
-      <LogicalName>Terraria.Libraries.ReLogic.ReLogic.dll</LogicalName>
-    </EmbeddedResource>
     <Reference Include="Steamworks.NET" />
     <Reference Include="SteelSeriesEngineWrapper" />
-    <Reference Include="System" />
-    <Reference Include="System.Core" />
-    <Reference Include="System.Drawing" />
-    <Reference Include="System.Runtime.Serialization" />
-    <Reference Include="System.Windows.Forms" />
-    <Reference Include="WindowsBase" />
   </ItemGroup>
   <ItemGroup>
     <EmbeddedResource Include="GameContent/Creative/Content/*" />
     <EmbeddedResource Include="GameContent/Metadata/MaterialData/*" />
     <EmbeddedResource Include="GameContent/WorldBuilding/*" />
     <EmbeddedResource Include="IO/Data/*" />
-    <EmbeddedResource Include="Libraries/**" />
     <EmbeddedResource Include="Localization/Content/**" />
     <EmbeddedResource Include="Microsoft/**" />
   </ItemGroup>
+  <ItemGroup>
+    <Compile Remove="Social/WeGame/AsyncTaskHelper.cs" />
+    <Compile Remove="Social/WeGame/CurrentThreadRunner.cs" />
+    <None Remove="Libraries/Mono/**" />
+    <None Remove="Libraries/Windows/**" />
+    <None Remove="Libraries/XNA/**" />
+    <None Remove="Libraries/net40/**" />
+    <Content Include="Libraries/Native/**" CopyToOutputDirectory="PreserveNewest" />
+  </ItemGroup>
+  <Target Name="CopyToSteamDir" AfterTargets="Build">
+    <ItemGroup>
+      <BinFiles Include="$(TargetDir)**" />
+    </ItemGroup>
+    <Message Text="Copying $(AssemblyName) to Steam Dir..." Importance="high" />
+    <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(TerrariaSteamPath)/%(RecursiveDir)" />
+  </Target>
+  <Target Name="RedirectAssemblyReferencesToLib" AfterTargets="ResolveAssemblyReferences">
+    <ItemGroup>
+      <!--To match deps.json for runtime resolving, paths must be of the form Libraries/<name>/<version>-->
+      <!--Note that associated files, like pdbs/xmls won't be resolved properly here. Prefer nuget packages for that-->
+      <ReferenceCopyLocalPaths Condition="%(ReferenceCopyLocalPaths.ReferenceSourceTarget) == 'ResolveAssemblyReference'">
+        <DirectoryVersion>$([System.String]::Copy('%(ReferenceCopyLocalPaths.FusionName)').Remove($([System.String]::Copy('%(ReferenceCopyLocalPaths.FusionName)').IndexOf(", C"))).Substring($([System.String]::Copy('%(ReferenceCopyLocalPaths.FusionName)').IndexOf(","))).Substring(10))</DirectoryVersion>
+      </ReferenceCopyLocalPaths>
+      <ReferenceCopyLocalPaths Condition="%(ReferenceCopyLocalPaths.ReferenceSourceTarget) == 'ResolveAssemblyReference'">
+        <DestinationSubDirectory>Libraries\%(ReferenceCopyLocalPaths.OriginalItemSpec)\%(ReferenceCopyLocalPaths.DirectoryVersion)\</DestinationSubDirectory>
+      </ReferenceCopyLocalPaths>
+    </ItemGroup>
+  </Target>
+  <Target Name="RedirectProjectReferencesToLib" AfterTargets="ResolveAssemblyReferences">
+    <ItemGroup>
+      <!--Version is bugged in deps.json for ProjectReferences, doesn't reflect AssemblyVersion for whatever reason. Uses 1.0.0-->
+      <!--As well, FusionName isn't available, so alternate string manipulation to get Name-->
+      <ReferenceCopyLocalPaths Condition="%(ReferenceCopyLocalPaths.ReferenceSourceTarget) == 'ProjectReference'">
+        <VersionHack>1.0.0</VersionHack>
+        <DllName>$([System.String]::Copy('%(ReferenceCopyLocalPaths.ResolvedFrom)').Remove($([System.String]::Copy('%(ReferenceCopyLocalPaths.ResolvedFrom)').IndexOf(".dll"))).SubString($([System.String]::Copy('%(ReferenceCopyLocalPaths.ResolvedFrom)').LastIndexOf("\"))).Substring(1))</DllName>
+      </ReferenceCopyLocalPaths>
+      <ReferenceCopyLocalPaths Condition="%(ReferenceCopyLocalPaths.ReferenceSourceTarget) == 'ProjectReference'">
+        <DestinationSubDirectory>Libraries\%(ReferenceCopyLocalPaths.DllName)\%(ReferenceCopyLocalPaths.VersionHack)\</DestinationSubDirectory>
+      </ReferenceCopyLocalPaths>
+    </ItemGroup>
+  </Target>
+  <Target Name="OverwriteDevRuntimeTargets" AfterTargets="GenerateBuildRuntimeConfigurationFiles">
+    <PropertyGroup>
+      <DevRuntimeConfig>
+{
+  "runtimeOptions": {
+    "additionalProbingPaths": [
+        "Libraries"
+    ]
+  }
+}
+      </DevRuntimeConfig>
+    </PropertyGroup>
+    <WriteLinesToFile File="$(ProjectRuntimeConfigDevFilePath)" Lines="$(DevRuntimeConfig)" Overwrite="true" Encoding="UTF-8" />
+  </Target>
 </Project>
